/*
 * Solar.web Query API (SWQAPI)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = kern.services.FroniusSolarWebClient.Client.OpenAPIDateConverter;

namespace kern.services.FroniusSolarWebClient.Model
{
    /// <summary>
    /// AggregatedValuesData
    /// </summary>
    [DataContract(Name = "AggregatedValues_data")]
    public partial class AggregatedValuesData : IEquatable<AggregatedValuesData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AggregatedValuesData" /> class.
        /// </summary>
        /// <param name="logPeriod">logPeriod.</param>
        /// <param name="channels">channels.</param>
        public AggregatedValuesData(AggDataLogPeriod logPeriod = default(AggDataLogPeriod), List<AggChannel> channels = default(List<AggChannel>))
        {
            this.LogPeriod = logPeriod;
            this.Channels = channels;
        }

        /// <summary>
        /// Gets or Sets LogPeriod
        /// </summary>
        [DataMember(Name = "logPeriod", EmitDefaultValue = true)]
        public AggDataLogPeriod LogPeriod { get; set; }

        /// <summary>
        /// Gets or Sets Channels
        /// </summary>
        [DataMember(Name = "channels", EmitDefaultValue = true)]
        public List<AggChannel> Channels { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AggregatedValuesData {\n");
            sb.Append("  LogPeriod: ").Append(LogPeriod).Append("\n");
            sb.Append("  Channels: ").Append(Channels).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AggregatedValuesData);
        }

        /// <summary>
        /// Returns true if AggregatedValuesData instances are equal
        /// </summary>
        /// <param name="input">Instance of AggregatedValuesData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AggregatedValuesData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.LogPeriod == input.LogPeriod ||
                    (this.LogPeriod != null &&
                    this.LogPeriod.Equals(input.LogPeriod))
                ) && 
                (
                    this.Channels == input.Channels ||
                    this.Channels != null &&
                    input.Channels != null &&
                    this.Channels.SequenceEqual(input.Channels)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LogPeriod != null)
                {
                    hashCode = (hashCode * 59) + this.LogPeriod.GetHashCode();
                }
                if (this.Channels != null)
                {
                    hashCode = (hashCode * 59) + this.Channels.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
