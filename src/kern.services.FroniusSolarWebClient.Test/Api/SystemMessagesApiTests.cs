/*
 * Solar.web Query API (SWQAPI)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using kern.services.FroniusSolarWebClient.Client;
using kern.services.FroniusSolarWebClient.Api;
// uncomment below to import models
//using kern.services.FroniusSolarWebClient.Model;

namespace kern.services.FroniusSolarWebClient.Test.Api
{
    /// <summary>
    ///  Class for testing SystemMessagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SystemMessagesApiTests : IDisposable
    {
        private SystemMessagesApi instance;

        public SystemMessagesApiTests()
        {
            instance = new SystemMessagesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SystemMessagesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SystemMessagesApi
            //Assert.IsType<SystemMessagesApi>(instance);
        }

        /// <summary>
        /// Test PvsystemsPvSystemIdDevicesDeviceIdMessagesCountGet
        /// </summary>
        [Fact]
        public void PvsystemsPvSystemIdDevicesDeviceIdMessagesCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid pvSystemId = null;
            //Guid deviceId = null;
            //string from = null;
            //string? stateType = null;
            //int? stateCode = null;
            //string? stateSeverity = null;
            //string? to = null;
            //string? languageCode = null;
            //var response = instance.PvsystemsPvSystemIdDevicesDeviceIdMessagesCountGet(pvSystemId, deviceId, from, stateType, stateCode, stateSeverity, to, languageCode);
            //Assert.IsType<SystemMessageList>(response);
        }

        /// <summary>
        /// Test PvsystemsPvSystemIdDevicesDeviceIdMessagesLanguageCodeGet
        /// </summary>
        [Fact]
        public void PvsystemsPvSystemIdDevicesDeviceIdMessagesLanguageCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid pvSystemId = null;
            //Guid deviceId = null;
            //string from = null;
            //string languageCode = null;
            //string? stateType = null;
            //int? stateCode = null;
            //string? stateSeverity = null;
            //string? to = null;
            //string? timezone = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.PvsystemsPvSystemIdDevicesDeviceIdMessagesLanguageCodeGet(pvSystemId, deviceId, from, languageCode, stateType, stateCode, stateSeverity, to, timezone, offset, limit);
            //Assert.IsType<SystemMessageList>(response);
        }

        /// <summary>
        /// Test PvsystemsPvSystemIdMessagesCountGet
        /// </summary>
        [Fact]
        public void PvsystemsPvSystemIdMessagesCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid pvSystemId = null;
            //string from = null;
            //string? stateType = null;
            //int? stateCode = null;
            //string? stateSeverity = null;
            //string? to = null;
            //string? type = null;
            //string? languageCode = null;
            //var response = instance.PvsystemsPvSystemIdMessagesCountGet(pvSystemId, from, stateType, stateCode, stateSeverity, to, type, languageCode);
            //Assert.IsType<SystemMessageList>(response);
        }

        /// <summary>
        /// Test PvsystemsPvSystemIdMessagesLanguageCodeGet
        /// </summary>
        [Fact]
        public void PvsystemsPvSystemIdMessagesLanguageCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid pvSystemId = null;
            //string from = null;
            //string languageCode = null;
            //string? stateType = null;
            //int? stateCode = null;
            //string? stateSeverity = null;
            //string? to = null;
            //string? timezone = null;
            //string? type = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.PvsystemsPvSystemIdMessagesLanguageCodeGet(pvSystemId, from, languageCode, stateType, stateCode, stateSeverity, to, timezone, type, offset, limit);
            //Assert.IsType<SystemMessageList>(response);
        }
    }
}
